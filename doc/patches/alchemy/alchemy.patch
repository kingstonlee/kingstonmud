diff -BbuprN -x '*.o' tbamud-3.55/src/alchemy.c tbaBREW/src/alchemy.c
--- tbamud-3.55/src/alchemy.c	1969-12-31 16:00:00.000000000 -0800
+++ tbaBREW/src/alchemy.c	2008-02-28 16:43:28.000000000 -0800
@@ -0,0 +1,280 @@
+/**************************************************************************
+*  File: alchemy.c                                   Part of tbaMUD       *
+*                                                                         *
+*  Usage: Source file for alchemy code                                    *    
+*                                                                         *
+*  All rights reserved.  See license.doc for complete information.        *
+*                                                                         *
+*  Copyright (C) 1993, 94 by the Trustees of the Johns Hopkins University *
+*  CircleMUD is based on DikuMUD, Copyright (C) 1990, 1991.               *
+************************************************************************ */
+
+#include "conf.h"
+#include "sysdep.h"
+
+
+#include "structs.h"
+#include "utils.h"
+#include "comm.h"
+#include "interpreter.h"
+#include "handler.h"
+#include "db.h"
+#include "constants.h"
+#include "spells.h"
+
+struct obj_data *get_first_in_list_of_type(struct obj_data *list, int type);
+int mag_manacost(struct char_data *ch, int spellnum);
+
+extern struct spell_info_type spell_info[];
+
+/* What kind of potions can brew make? */
+const int brew_spells[] = {
+  SPELL_CURE_LIGHT,
+  SPELL_ARMOR,
+  SPELL_DETECT_INVIS,
+  SPELL_REMOVE_POISON,
+  -1
+};
+ 
+/* What kind of potions can mix make? */
+const int mix_spells[] = {
+  SPELL_SENSE_LIFE,
+  SPELL_WATERWALK,
+  SPELL_INVISIBLE,
+  -1
+};
+
+/* What kind of potions can blend make? */
+const int blend_spells[] = {
+  SPELL_CURE_CRITIC,
+  SPELL_STRENGTH,
+  SPELL_WORD_OF_RECALL,
+  SPELL_CURE_BLIND,   /* haha, a cure blind potion */
+  -1
+};
+
+/* What kind of spells can concoct make? */
+const int concoct_spells[] = {
+  SPELL_HEAL,
+  SPELL_SANCTUARY,
+  SPELL_INFRAVISION,
+  -1
+};
+
+ACMD(do_potion_make)
+{
+  const int *spell_array = NULL;
+  char arg[MAX_INPUT_LENGTH];
+  struct obj_data *bottle = NULL, 
+                    *herb = NULL, 
+                  *potion = NULL;
+
+  int skill_num = -1, spell_num = -1, 
+      required_cat = -1, required_herb = -1;
+
+  char *attempted_skill = NULL, 
+                     *s = NULL;
+
+  /* Umm... no. */
+  if (IS_NPC(ch))
+    return;
+
+  /* get: blank, spell name, target name */
+  s = strtok(argument, "'");
+
+  if (s == NULL) {
+    send_to_char(ch, "What potion do you want to make??\r\n");
+    return;
+  }
+  s = strtok(NULL, "'");
+  if (s == NULL) {
+    send_to_char(ch, "Spell names must be enclosed in the Holy Magic Symbols: '\r\n");
+    return;
+  }
+
+  /* spellnum = search_block(s, spells, 0); */
+  spell_num = find_skill_num(s);
+
+  
+
+  /* Which one are they trying to do? */
+  switch(subcmd) {
+    case SCMD_BREW:
+      spell_array = brew_spells;
+      skill_num = SKILL_BREW;
+      required_cat = LIQ_WHITE_CATALYST;
+      required_herb = HERB_FRESH;
+      attempted_skill = "Brew";
+      break;
+    case SCMD_MIX:
+      spell_array = mix_spells;
+      skill_num = SKILL_MIX;
+      required_cat = LIQ_GREY_CATALYST;
+      required_herb = HERB_DRIED;
+      attempted_skill = "Mix";
+      break;
+    case SCMD_BLEND:
+      spell_array = blend_spells;
+      skill_num = SKILL_BLEND;
+      required_cat = LIQ_BLACK_CATALYST;
+      required_herb = HERB_AGED;
+      attempted_skill = "Blend";
+      break;
+    case SCMD_CONCOCT:
+      spell_array = concoct_spells;
+      skill_num = SKILL_CONCOCT;
+      required_cat = LIQ_RED_CATALYST;
+      required_herb = HERB_FOSSIL;
+      attempted_skill = "Concoct";
+      break;
+  }
+
+  /* Did they pick an existing spell? */
+  if ((spell_num < 1) || (spell_num > MAX_SPELLS)) {
+    send_to_char(ch, "%s what?!?\r\n", attempted_skill);
+    return;
+  }
+
+  /* Do they wield a spoon? */
+  if (!GET_EQ(ch, WEAR_WIELD) || 
+      !(GET_OBJ_TYPE(GET_EQ(ch, WEAR_WIELD)) == ITEM_SPOON)) {
+    send_to_char(ch, "You need to wield a spoon.\r\n");
+    return;
+  }
+
+  /* They have a spoon, what about a liquid container? */
+  if (!GET_EQ(ch, WEAR_HOLD) || 
+      (GET_OBJ_TYPE(GET_EQ(ch, WEAR_HOLD)) != ITEM_DRINKCON)) {
+    send_to_char(ch, "You need to be holding a liquid container.\r\n");
+    return;
+  }
+
+  /* Does it contain the right catalyst? */
+  if ((GET_OBJ_VAL(GET_EQ(ch, WEAR_HOLD), 2) != required_cat)) {
+    send_to_char(ch, "You need to be holding a container full of %s.\r\n",
+      drinks[required_cat]);
+    return;
+  }
+
+  /* Is it full? */
+  if (!(GET_OBJ_VAL(GET_EQ(ch, WEAR_HOLD), 0) == GET_OBJ_VAL(GET_EQ(ch, WEAR_HOLD), 1))) {
+    send_to_char(ch, "You need to be holding a container FULL of %s.\r\n",
+      drinks[required_cat]);
+  }
+
+  /* Do they have right right herb? */
+  herb = ch->carrying;
+
+  do {
+    herb = get_first_in_list_of_type(herb, ITEM_HERB);
+    if (!herb) break;
+    if (GET_OBJ_VAL(herb, 0) == required_herb) break;
+    herb = herb->next;
+  } while ( TRUE );
+
+  /* By now, we either found the right herb, or no herb at all. */
+  if (!herb) {
+    send_to_char(ch, "You need to have a %s in your inventory.\r\n",
+      herbs[required_herb]);
+    return;
+  }
+
+  /* Do they have an empty liquid container? */
+  bottle = ch->carrying;
+  do {
+    bottle = get_first_in_list_of_type(bottle, ITEM_DRINKCON);
+    if (!bottle) break;
+    if (!GET_OBJ_VAL(bottle, 1) && !GET_OBJ_VAL(bottle, 2) && !GET_OBJ_VAL(bottle, 3)) break;
+    bottle = bottle->next;
+  } while ( TRUE );
+
+  /* By now, we either found an empty bottle, or no bottle at all. */
+  if (!bottle) {
+    send_to_char(ch, "You need to have an empty liquid container in your inventory.\r\n");
+    return;
+  }
+
+  /* Is the spell they wanted to cast legal? */
+  for(;*spell_array != -1;spell_array++)
+    if(*spell_array == spell_num) break;
+
+  if(*spell_array == -1) {
+    send_to_char(ch, "You cannot %c%s that!\r\n",
+      LOWER(*attempted_skill), attempted_skill + 1);
+    return;
+  }
+
+  /* Do they have enough mana? */
+  if (GET_MANA(ch) < 3 * mag_manacost(ch, spell_num)) {
+    send_to_char(ch, "You don't have enough mana!\r\n");
+    return;
+  }
+
+  /* Apparently so!  Let's go! */
+
+  /* Roll for it first. */
+  if (GET_SKILL(ch, skill_num) > (circle_random() % 101)) {
+    sprintf(arg, "a potion of '%s'", spell_info[spell_num].name);
+    printf("%d", spell_num);
+    potion = create_obj();
+    potion->item_number = 1;
+    potion->name = strdup("potion");
+    potion->short_description = strdup(arg);
+    potion->description = strdup("Someone has left a potion here.");
+
+    GET_OBJ_TYPE(potion) = ITEM_POTION;
+    SET_BIT_AR(GET_OBJ_WEAR(potion), ITEM_WEAR_TAKE);
+    GET_OBJ_WEIGHT(potion) = 2;
+    GET_OBJ_COST(potion) = 40;
+    SET_BIT_AR(GET_OBJ_EXTRA(potion), ITEM_NOSELL);
+    SET_BIT_AR(GET_OBJ_EXTRA(potion), ITEM_MAGIC);
+    GET_OBJ_VAL(potion, 0) = GET_LEVEL(ch);
+    GET_OBJ_VAL(potion, 1) = spell_num;
+    GET_OBJ_VAL(potion, 2) = -1;
+    GET_OBJ_VAL(potion, 3) = -1;
+   
+    GET_OBJ_VAL(GET_EQ(ch, WEAR_HOLD), 1) = 0;
+    
+    obj_to_char(potion, ch);
+
+    GET_MANA(ch) -= 3 * mag_manacost(ch, spell_num);
+
+    send_to_char(ch, "You have created a potion!\r\n");
+    act("$n has created a potion!", TRUE, ch, 0, 0, TO_ROOM);
+  } else {
+    sprintf(arg, "%s tries to make a potion but it explodes in his face!", GET_NAME(ch));
+    act(arg, TRUE, ch, 0, 0, TO_ROOM);
+
+    GET_HIT(ch) -= 3 * mag_manacost(ch, spell_num);
+    update_pos(ch);
+  } 
+
+  /* Take the required stuff anyway.  We're mean :(  */
+ 
+  sprintf(arg, "%s is consumed in the process.", herb->short_description);
+  send_to_char(ch, "%s\r\n", arg);
+  act(arg, TRUE, ch, 0, 0, TO_ROOM);
+  sprintf(arg, "You use all the contents of your %s.", GET_EQ(ch, WEAR_HOLD)->short_description);
+  send_to_char(ch, "%s\r\n", arg);
+  sprintf(arg, "%s uses all the contents of %s %s.", GET_NAME(ch), HMHR(ch), GET_EQ(ch, WEAR_HOLD)->short_description);
+  act(arg, TRUE, ch, 0, 0, TO_ROOM);
+  
+  
+  extract_obj(bottle);
+  extract_obj(herb);
+
+}
+
+struct obj_data *get_first_in_list_of_type(struct obj_data *list, int type)
+{
+  struct obj_data *index = list;
+
+  while(index) {
+    if (GET_OBJ_TYPE(index) == type)
+      return index;
+
+    index = index->next;
+  }
+
+  return NULL;
+}
diff -BbuprN -x '*.o' tbamud-3.55/src/class.c tbaBREW/src/class.c
--- tbamud-3.55/src/class.c	2008-01-16 15:21:14.000000000 -0800
+++ tbaBREW/src/class.c	2008-02-28 16:09:53.000000000 -0800
@@ -1594,10 +1594,12 @@ void init_spell_levels(void)
   spell_level(SPELL_COLOR_SPRAY, CLASS_MAGIC_USER, 11);
   spell_level(SPELL_ENERGY_DRAIN, CLASS_MAGIC_USER, 13);
   spell_level(SPELL_CURSE, CLASS_MAGIC_USER, 14);
+  spell_level(SKILL_BREW, CLASS_MAGIC_USER, 14);
   spell_level(SPELL_POISON, CLASS_MAGIC_USER, 14);
   spell_level(SPELL_FIREBALL, CLASS_MAGIC_USER, 15);
   spell_level(SPELL_CHARM, CLASS_MAGIC_USER, 16);
   spell_level(SPELL_ENCHANT_WEAPON, CLASS_MAGIC_USER, 26);
+  spell_level(SKILL_MIX, CLASS_MAGIC_USER, 28);
   spell_level(SPELL_CLONE, CLASS_MAGIC_USER, 30);
 
   /* CLERICS */
@@ -1610,6 +1612,7 @@ void init_spell_levels(void)
   spell_level(SPELL_CURE_BLIND, CLASS_CLERIC, 4);
   spell_level(SPELL_BLESS, CLASS_CLERIC, 5);
   spell_level(SPELL_DETECT_INVIS, CLASS_CLERIC, 6);
+  spell_level(SKILL_BREW, CLASS_CLERIC, 6);
   spell_level(SPELL_BLINDNESS, CLASS_CLERIC, 6);
   spell_level(SPELL_INFRAVISION, CLASS_CLERIC, 7);
   spell_level(SPELL_PROT_FROM_EVIL, CLASS_CLERIC, 8);
@@ -1620,6 +1623,7 @@ void init_spell_levels(void)
   spell_level(SPELL_REMOVE_POISON, CLASS_CLERIC, 10);
   spell_level(SPELL_WORD_OF_RECALL, CLASS_CLERIC, 12);
   spell_level(SPELL_EARTHQUAKE, CLASS_CLERIC, 12);
+  spell_level(SKILL_MIX, CLASS_CLERIC, 13);
   spell_level(SPELL_DISPEL_EVIL, CLASS_CLERIC, 14);
   spell_level(SPELL_DISPEL_GOOD, CLASS_CLERIC, 14);
   spell_level(SPELL_SANCTUARY, CLASS_CLERIC, 15);
@@ -1627,9 +1631,11 @@ void init_spell_levels(void)
   spell_level(SPELL_HEAL, CLASS_CLERIC, 16);
   spell_level(SPELL_CONTROL_WEATHER, CLASS_CLERIC, 17);
   spell_level(SPELL_SENSE_LIFE, CLASS_CLERIC, 18);
+  spell_level(SKILL_BLEND, CLASS_CLERIC, 18);
   spell_level(SPELL_HARM, CLASS_CLERIC, 19);
   spell_level(SPELL_GROUP_HEAL, CLASS_CLERIC, 22);
   spell_level(SPELL_REMOVE_CURSE, CLASS_CLERIC, 26);
+  spell_level(SKILL_CONCOCT, CLASS_CLERIC, 29);
 
   /* THIEVES */
   spell_level(SKILL_SNEAK, CLASS_THIEF, 1);
diff -BbuprN -x '*.o' tbamud-3.55/src/constants.c tbaBREW/src/constants.c
--- tbamud-3.55/src/constants.c	2008-01-16 15:21:15.000000000 -0800
+++ tbaBREW/src/constants.c	2008-02-28 16:59:48.000000000 -0800
@@ -320,6 +320,18 @@ const char *item_types[] = {
   "PEN",
   "BOAT",
   "FOUNTAIN",
+  "SPOON",
+  "HERB",
+  "\n"
+};
+
+
+/* HERB_XX */
+const char *herbs[] = {
+  "fresh herb",
+  "dried herb",
+  "aged herb",
+  "fossilized herb",
   "\n"
 };
 
@@ -423,6 +435,10 @@ const char *drinks[] =
   "blood",
   "salt water",
   "clear water",
+  "white catalyst",
+  "grey catalyst",
+  "black catalyst",
+  "red catalyst",
   "\n"
 };
 
@@ -445,6 +461,10 @@ const char *drinknames[] =
   "blood",
   "salt",
   "water",
+  "white",
+  "grey",
+  "black",
+  "red",
   "\n"
 };
 
diff -BbuprN -x '*.o' tbamud-3.55/src/constants.h tbaBREW/src/constants.h
--- tbamud-3.55/src/constants.h	2008-01-16 15:21:15.000000000 -0800
+++ tbaBREW/src/constants.h	2008-02-28 16:00:30.000000000 -0800
@@ -48,6 +48,7 @@ extern const char *trig_types[];
 extern const char *otrig_types[];
 extern const char *wtrig_types[];
 extern const char *history_types[];
+extern const char *herbs[];
 extern size_t room_bits_count;
 extern size_t action_bits_count;
 extern size_t affected_bits_count;
diff -BbuprN -x '*.o' tbamud-3.55/src/interpreter.c tbaBREW/src/interpreter.c
--- tbamud-3.55/src/interpreter.c	2008-01-16 15:27:40.000000000 -0800
+++ tbaBREW/src/interpreter.c	2008-02-28 16:05:25.000000000 -0800
@@ -159,6 +159,7 @@ ACMD(do_order);
 ACMD(do_page);
 ACMD(do_peace);
 ACMD(do_plist);
+ACMD(do_potion_make);
 ACMD(do_pour);
 ACMD(do_practice);
 ACMD(do_purge);
@@ -263,6 +264,8 @@ cpp_extern const struct command_info cmd
   { "ban"      , "ban"     , POS_DEAD    , do_ban      , LVL_GRGOD, 0 },
   { "balance"  , "bal"     , POS_STANDING, do_not_here , 1, 0 },
   { "bash"     , "bas"     , POS_FIGHTING, do_bash     , 1, 0 },
+  { "blend"    , "blend"   , POS_STANDING, do_potion_make, 0, SCMD_BLEND },
+  { "brew"     , "brew"    , POS_STANDING, do_potion_make, 0, SCMD_BREW },
   { "brief"    , "br"      , POS_DEAD    , do_gen_tog  , 0, SCMD_BRIEF },
   { "buildwalk", "buildwalk", POS_STANDING, do_gen_tog,   LVL_BUILDER, SCMD_BUILDWALK },
   { "buy"      , "bu"      , POS_STANDING, do_not_here , 0, 0 },
@@ -279,6 +282,7 @@ cpp_extern const struct command_info cmd
   { "consider" , "con"     , POS_RESTING , do_consider , 0, 0 },
   { "commands" , "com"     , POS_DEAD    , do_commands , 0, SCMD_COMMANDS },
   { "compact"  , "comp"    , POS_DEAD    , do_gen_tog  , 0, SCMD_COMPACT },
+  { "concoct"  , "concoct" , POS_STANDING, do_potion_make, 0, SCMD_CONCOCT },
   { "copyover" , "copyover", POS_DEAD    , do_copyover , LVL_GRGOD, 0 },
   { "credits"  , "cred"    , POS_DEAD    , do_gen_ps   , 0, SCMD_CREDITS },
 
@@ -361,6 +365,7 @@ cpp_extern const struct command_info cmd
   { "motd"     , "motd"    , POS_DEAD    , do_gen_ps   , 0, SCMD_MOTD },
   { "mail"     , "mail"    , POS_STANDING, do_not_here , 1, 0 },
   { "medit"    , "med"     , POS_DEAD    , do_oasis_medit, LVL_BUILDER, 0 },
+  { "mix"      , "mix"     , POS_STANDING, do_potion_make, 0, SCMD_MIX },
   { "mlist"    , "mlist"   , POS_DEAD    , do_oasis_list , LVL_BUILDER, SCMD_OASIS_MLIST },
   { "mcopy"    , "mcopy"   , POS_DEAD    , do_oasis_copy, LVL_GOD, CON_MEDIT },
   { "mute"     , "mute"    , POS_DEAD    , do_wizutil  , LVL_GOD, SCMD_MUTE },
diff -BbuprN -x '*.o' tbamud-3.55/src/interpreter.h tbaBREW/src/interpreter.h
--- tbamud-3.55/src/interpreter.h	2008-01-16 15:21:15.000000000 -0800
+++ tbaBREW/src/interpreter.h	2008-02-28 16:01:23.000000000 -0800
@@ -222,3 +222,9 @@ struct alias_data {
 
 /* do_last */
 #define SCMD_LIST_ALL 1
+
+/* do_potion_make */
+#define SCMD_BREW              0
+#define SCMD_MIX               1
+#define SCMD_BLEND             2
+#define SCMD_CONCOCT           3
diff -BbuprN -x '*.o' tbamud-3.55/src/Makefile.in tbaBREW/src/Makefile.in
--- tbamud-3.55/src/Makefile.in	2008-01-16 15:21:14.000000000 -0800
+++ tbaBREW/src/Makefile.in	2008-02-28 16:44:40.000000000 -0800
@@ -25,7 +25,8 @@ LIBS = @LIBS@ @CRYPTLIB@ @NETLIB@
 
 OBJFILES = act.comm.o act.informative.o act.item.o act.movement.o \
 	act.offensive.o act.other.o act.social.o act.wizard.o aedit.o \
-	ban.o boards.o bsd-snprintf.o castle.o cedit.o class.o comm.o config.o \
+	alchemy.o ban.o boards.o bsd-snprintf.o castle.o cedit.o class.o \
+	comm.o config.o \
 	constants.o db.o dg_comm.o dg_db_scripts.o dg_event.o \
 	dg_handler.o dg_misc.o dg_mobcmd.o dg_objcmd.o dg_olc.o dg_scripts.o \
 	dg_triggers.o dg_variables.o dg_wldcmd.o fight.o genmob.o \
@@ -38,7 +39,8 @@ OBJFILES = act.comm.o act.informative.o 
 
 CXREF_FILES = act.comm.c act.informative.c act.item.c act.movement.c \
 	act.offensive.c act.other.c act.social.c act.wizard.c aedit.c \
-	ban.c boards.c bsd-snprintf.c castle.c cedit.c class.c comm.c config.c \
+	alchemy.c ban.c boards.c bsd-snprintf.c castle.c cedit.c class.c \
+	comm.c config.c \
 	constants.c db.c dg_comm.c dg_db_scripts.c dg_event.c \
 	dg_handler.c dg_misc.c dg_mobcmd.c dg_objcmd.c dg_olc.c dg_scripts.c \
 	dg_triggers.c dg_variables.c dg_wldcmd.c fight.c genmob.c \
@@ -61,7 +63,7 @@ all: .accepted
 utils: .accepted
 	(cd util; $(MAKE) all)
 circle:
-	$(MAKE) $(BINDIR)/circle
+	(MAKE) $(BINDIR)/circle
 
 $(BINDIR)/circle : $(OBJFILES)
 	$(CC) -o $(BINDIR)/circle $(PROFILE) $(OBJFILES) $(LIBS)
diff -BbuprN -x '*.o' tbamud-3.55/src/oasis.h tbaBREW/src/oasis.h
--- tbamud-3.55/src/oasis.h	2008-01-16 15:21:15.000000000 -0800
+++ tbaBREW/src/oasis.h	2008-02-28 16:00:01.000000000 -0800
@@ -24,11 +24,11 @@
 #define NUM_AFF_FLAGS		22
 #define NUM_ATTACK_TYPES	15
 
-#define NUM_ITEM_TYPES		24
+#define NUM_ITEM_TYPES		26
 #define NUM_ITEM_FLAGS		17
 #define NUM_ITEM_WEARS 		15
 #define NUM_APPLIES		25
-#define NUM_LIQ_TYPES 		16
+#define NUM_LIQ_TYPES 		20
 #define NUM_POSITIONS		15
 #define NUM_SPELLS		51
 
diff -BbuprN -x '*.o' tbamud-3.55/src/oedit.c tbaBREW/src/oedit.c
--- tbamud-3.55/src/oedit.c	2008-01-16 15:21:14.000000000 -0800
+++ tbaBREW/src/oedit.c	2008-02-28 15:58:14.000000000 -0800
@@ -414,6 +414,21 @@ void oedit_disp_spells_menu(struct descr
   write_to_output(d, "\r\n%sEnter spell choice (-1 for none) : ", nrm);
 }
 
+/* Herb type. */
+void oedit_disp_herbs_menu(struct descriptor_data *d)
+{
+  int counter, columns = 0;
+
+  get_char_colors(d->character);
+  clear_screen(d);
+
+  for (counter = 0;counter < NUM_HERB_TYPES;counter++)
+    write_to_output(d, "%s%2d%s) %s%-20.20s %s", grn, counter, nrm, yel,
+                herbs[counter], !(++columns % 3) ? "\r\n" : "");
+
+  write_to_output(d, "\r\n%sEnter herb choice : ", nrm);
+}
+
 /* Object value #1 */
 void oedit_disp_val1_menu(struct descriptor_data *d)
 {
@@ -423,6 +438,9 @@ void oedit_disp_val1_menu(struct descrip
     /* values 0 and 1 are unused.. jump to 2 */
     oedit_disp_val3_menu(d);
     break;
+  case ITEM_HERB:
+    oedit_disp_herbs_menu(d);
+    break;
   case ITEM_SCROLL:
   case ITEM_WAND:
   case ITEM_STAFF:
@@ -960,6 +978,9 @@ void oedit_parse(struct descriptor_data 
     case ITEM_WEAPON:
       GET_OBJ_VAL(OLC_OBJ(d), 0) = MIN(MAX(atoi(arg), -50), 50);
       break;
+    case ITEM_HERB:
+      GET_OBJ_VAL(OLC_OBJ(d), 0) = LIMIT(atoi(arg), 0, NUM_HERB_TYPES - 1);
+      break;
     case ITEM_CONTAINER:
       GET_OBJ_VAL(OLC_OBJ(d), 0) = LIMIT(atoi(arg), -1, MAX_CONTAINER_SIZE);
       break;
diff -BbuprN -x '*.o' tbamud-3.55/src/spell_parser.c tbaBREW/src/spell_parser.c
--- tbamud-3.55/src/spell_parser.c	2008-01-16 15:21:15.000000000 -0800
+++ tbaBREW/src/spell_parser.c	2008-02-28 16:07:04.000000000 -0800
@@ -934,7 +934,11 @@ void mag_assign_spells(void)
    * the skill for other classes is set up in class.c. */
   skillo(SKILL_BACKSTAB, "backstab");
   skillo(SKILL_BASH, "bash");
+  skillo(SKILL_BLEND, "blend");
+  skillo(SKILL_BREW, "brew");
+  skillo(SKILL_CONCOCT, "concoct");
   skillo(SKILL_HIDE, "hide");
+  skillo(SKILL_MIX, "mix");
   skillo(SKILL_KICK, "kick");
   skillo(SKILL_PICK_LOCK, "pick lock");
   skillo(SKILL_RESCUE, "rescue");
diff -BbuprN -x '*.o' tbamud-3.55/src/spells.h tbaBREW/src/spells.h
--- tbamud-3.55/src/spells.h	2008-01-16 15:21:15.000000000 -0800
+++ tbaBREW/src/spells.h	2008-02-28 16:06:05.000000000 -0800
@@ -99,6 +99,11 @@
 #define SKILL_SNEAK                 138 /* Reserved Skill[] DO NOT CHANGE */
 #define SKILL_STEAL                 139 /* Reserved Skill[] DO NOT CHANGE */
 #define SKILL_TRACK		    140 /* Reserved Skill[] DO NOT CHANGE */
+#define SKILL_BREW                  141 /* Reserved Skill[] DO NOT CHANGE */
+#define SKILL_MIX                   142 /* Reserved Skill[] DO NOT CHANGE */
+#define SKILL_BLEND                 143 /* Reserved Skill[] DO NOT CHANGE */
+#define SKILL_CONCOCT               144 /* Reserved Skill[] DO NOT CHANGE */
+
 /* New skills may be added here up to MAX_SKILLS (200) */
 
 /* NON-PLAYER AND OBJECT SPELLS AND SKILLS: The practice levels for the spells 
diff -BbuprN -x '*.o' tbamud-3.55/src/structs.h tbaBREW/src/structs.h
--- tbamud-3.55/src/structs.h	2008-01-16 15:21:15.000000000 -0800
+++ tbaBREW/src/structs.h	2008-02-28 15:49:25.000000000 -0800
@@ -315,6 +315,8 @@
 #define ITEM_PEN       21		/* Item is a pen		*/
 #define ITEM_BOAT      22		/* Item is a boat		*/
 #define ITEM_FOUNTAIN  23		/* Item is a fountain		*/
+#define ITEM_SPOON     24               /* Item is a spoon (brewing)    */
+#define ITEM_HERB      25               /* Item is a herb (brewing)     */
 
 /* Take/Wear flags: used by obj_data.obj_flags.wear_flags */
 #define ITEM_WEAR_TAKE      0   /* Item can be taken */
@@ -402,6 +404,10 @@
 #define LIQ_BLOOD      13
 #define LIQ_SALTWATER  14
 #define LIQ_CLEARWATER 15
+#define LIQ_WHITE_CATALYST   16
+#define LIQ_GREY_CATALYST    17
+#define LIQ_BLACK_CATALYST   18
+#define LIQ_RED_CATALYST     19
 
 /* other miscellaneous defines */
 /* Player conditions */
@@ -421,6 +427,14 @@
 #define SKY_RAINING	2
 #define SKY_LIGHTNING	3
 
+/* Herb types */
+#define HERB_FRESH            0
+#define HERB_DRIED            1
+#define HERB_AGED             2
+#define HERB_FOSSIL           3
+
+#define NUM_HERB_TYPES        4
+
 /* Rent codes */
 #define RENT_UNDEF      0
 #define RENT_CRASH      1
